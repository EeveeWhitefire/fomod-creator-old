<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Link Button  -->
    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextTrimming="CharacterEllipsis" Text="{TemplateBinding Content}">
                        <!--<ContentPresenter />-->
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource GrayHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddButton"
           TargetType="Button">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                    <Rectangle Width="14"
                               Height="14"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
        </Setter.Value>
    </Setter>
    <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="true">
            <Setter Property="Foreground" Value="{DynamicResource GrayHoverBrush}" />
        </Trigger>
    </Style.Triggers>
    </Style>

    <Style x:Key="DeleteButton"
           TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Rectangle Width="14"
                               Height="14"
                               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_close}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource GrayHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RedButton" TargetType="Button" BasedOn="{StaticResource SquareButtonStyle}">
        <Style.Resources>
            <SolidColorBrush x:Key="IsPressedBackground" Color="#FFC72E2E" />
            <SolidColorBrush x:Key="IsPressedBorderBrush" Color="#FFF34747" />
            <SolidColorBrush x:Key="IsPressedForeground" Color="White" />
            <SolidColorBrush x:Key="IsMouseOverBackground" Color="#FFF34747" />
            <SolidColorBrush x:Key="IsMouseOverBorderBrush" Color="#FFF34747" />
            <SolidColorBrush x:Key="IsMouseOverForeground" Color="White" />
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource IsPressedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource IsPressedBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource IsPressedForeground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource IsMouseOverForeground}" />
                <Setter Property="BorderBrush" Value="{StaticResource IsMouseOverBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource IsMouseOverBackground}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="GreenButton"
           BasedOn="{StaticResource SquareButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Resources>
            <SolidColorBrush x:Key="IsPressedBackground" Color="#FF197819" />
            <SolidColorBrush x:Key="IsPressedBorderBrush" Color="#FF197819" />
            <SolidColorBrush x:Key="IsPressedForeground" Color="White" />

            <SolidColorBrush x:Key="IsMouseOverBackground" Color="#FF4DA44D" />
            <SolidColorBrush x:Key="IsMouseOverBorderBrush" Color="#FF4DA44D" />
            <SolidColorBrush x:Key="IsMouseOverForeground" Color="White" />
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource IsPressedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource IsPressedBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource IsPressedForeground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource IsMouseOverForeground}" />
                <Setter Property="BorderBrush" Value="{StaticResource IsMouseOverBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource IsMouseOverBackground}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>